!function(e){e.extend(!0,{ddMap:{defaults:{markers:new Array,element:"map",defaultZoom:15,defaultType:"map",scrollZoom:!1,mapCenterOffset:!1,markerOptions:{},controls:[{name:"zoomControl"},{name:"typeSelector"},{name:"fullscreenControl"},{name:"geolocationControl"},{name:"rulerControl"}],mapOptions:{suppressMapOpenBlock:!0},apiKey:""},isStaticInited:!1,apiConnectionAttempts:0,prepareMarkers:function(t){var n=new ymaps.GeoObjectCollection;return Array.isArray(t.markers)?(2==t.markers.length&&e.isNumeric(t.markers[0])&&e.isNumeric(t.markers[1])?n.add(new ymaps.Placemark(t.markers,{},t.markerOptions)):t.markers.forEach((a=>{e.isPlainObject(a)&&Array.isArray(a.latLng)&&2==a.latLng.length&&n.add(new ymaps.Placemark(a.latLng,{balloonContent:"string"==typeof a.content?e.trim(a.content):""},t.markerOptions))})),n):n},initStatic:function(t){if(!this.isStaticInited&&(this.isStaticInited=!0,"undefined"==typeof ymaps)){var n="//api-maps.yandex.ru/2.1/?lang="+navigator.language;t.apiKey.length>0&&(n+="&apikey="+t.apiKey),e("head").append('<script defer src="'+n+'"><\/script>')}},init:function(t){var n=this;t=e.extend({},n.defaults,t),n.initStatic({apiKey:t.apiKey}),"undefined"==typeof ymaps?(n.apiConnectionAttempts++,n.apiConnectionAttempts<10&&setTimeout(n.init.bind(n,t),500+100*n.apiConnectionAttempts)):ymaps.ready((function(){var a=n.prepareMarkers(t),r=a.getLength();if(r>0){t.$element=e(t.$element),0==t.$element.height()&&t.$element.height(400);var i=new ymaps.Map(t.$element.get(0),{center:a.get(0).geometry.getCoordinates(),zoom:t.defaultZoom,type:"yandex#"+t.defaultType,controls:[]},t.mapOptions);if(Array.isArray(t.controls)&&t.controls.forEach((e=>{e.name&&i.controls.add(e.name,e.options)})),t.scrollZoom||i.behaviors.disable("scrollZoom"),i.geoObjects.add(a),r>1&&(t.$element.is(":hidden")?i.events.once("sizechange",(function(){i.setBounds(a.getBounds())})):i.setBounds(a.getBounds())),Array.isArray(t.mapCenterOffset)&&2==t.mapCenterOffset.length){var o=i.getGlobalPixelCenter();i.setGlobalPixelCenter([o[0]-t.mapCenterOffset[0],o[1]-t.mapCenterOffset[1]])}t.$element.data("ddMap",{map:i}).trigger("ddAfterInit")}}))}}}),e.fn.ddMap=function(t){var n=e.ddMap;return e(this).each((function(){n.init(e.extend(t,{$element:this}))}))}}(jQuery);